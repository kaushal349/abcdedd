[{"E:\\PieChartTemp\\src\\index.js":"1","E:\\PieChartTemp\\src\\reportWebVitals.js":"2","E:\\PieChartTemp\\src\\App.js":"3","E:\\PieChartTemp\\src\\components\\Home\\MainPage.js":"4","E:\\PieChartTemp\\src\\components\\Home\\MapEmbedd.js":"5","E:\\PieChartTemp\\src\\components\\Dashboard\\piechart.js":"6","E:\\PieChartTemp\\src\\components\\Dashboard\\alerts.js":"7","E:\\PieChartTemp\\src\\components\\NavBar.js":"8","E:\\PieChartTemp\\src\\components\\Dashboard\\DashboardMain.js":"9","E:\\PieChartTemp\\src\\components\\Dashboard\\alertDetail.js":"10","E:\\PieChartTemp\\src\\extras\\ShipsId.js":"11","E:\\PieChartTemp\\src\\components\\Dashboard\\displayShip.js":"12","E:\\PieChartTemp\\src\\components\\Dashboard\\DisplayUnknownShips.js":"13"},{"size":517,"mtime":1612325050539,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1612151317094,"results":"16","hashOfConfig":"15"},{"size":400,"mtime":1612154277882,"results":"17","hashOfConfig":"15"},{"size":3800,"mtime":1612330770247,"results":"18","hashOfConfig":"15"},{"size":3495,"mtime":1612331115942,"results":"19","hashOfConfig":"15"},{"size":5225,"mtime":1612190772215,"results":"20","hashOfConfig":"15"},{"size":1041,"mtime":1612157217107,"results":"21","hashOfConfig":"15"},{"size":448,"mtime":1612152409800,"results":"22","hashOfConfig":"15"},{"size":806,"mtime":1612190958233,"results":"23","hashOfConfig":"15"},{"size":1745,"mtime":1612169803826,"results":"24","hashOfConfig":"15"},{"size":2150,"mtime":1612175944418,"results":"25","hashOfConfig":"15"},{"size":5128,"mtime":1612332781904,"results":"26","hashOfConfig":"15"},{"size":4643,"mtime":1612332959560,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ptwx2s",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\PieChartTemp\\src\\index.js",[],["59","60"],"E:\\PieChartTemp\\src\\reportWebVitals.js",[],"E:\\PieChartTemp\\src\\App.js",[],"E:\\PieChartTemp\\src\\components\\Home\\MainPage.js",["61","62","63"],"E:\\PieChartTemp\\src\\components\\Home\\MapEmbedd.js",["64"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\r\nimport { ShipsID } from '../../extras/ShipsId';\r\n\r\nconst MapEmbedd = ({\r\n  satelliteFeed,\r\n  activeZoom,\r\n  intiLng,\r\n  initLat,\r\n  rerenderDashbaord,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n  });\r\n\r\n  const { showingInfoWindow, activeMarker } = formData;\r\n\r\n  const history = useHistory();\r\n  const google = window.google;\r\n  let shipsData = require('../../JsonData/final_AIS_data.json');\r\n  let markerColor = require('../../JsonData/marker_color.json');\r\n  let satData = require('../../JsonData/satelite_feed.json');\r\n  console.log(`reloaded active zoom ${activeZoom}`);\r\n  return (\r\n    <div>\r\n      <Map\r\n        google={google}\r\n        mapType='satellite'\r\n        zoom={activeZoom}\r\n        onClick={() => console.log('map clicked')}\r\n        initialCenter={{\r\n          lat: initLat,\r\n          lng: intiLng,\r\n        }}\r\n        style={{\r\n          height: '800px',\r\n        }}\r\n      >\r\n        {satelliteFeed &&\r\n          satData.map((sati, index) => {\r\n            return (\r\n              <Marker\r\n                key={index}\r\n                onClick={() => {\r\n                  history.push(`/shipdetails/${sati[0]}/${sati[1]}`);\r\n                  window.location.reload(false);\r\n                  // rerenderDashbaord();\r\n                }}\r\n                icon={{\r\n                  path: google.maps.SymbolPath.CIRCLE,\r\n                  fillColor: 'yellow',\r\n                  strokeColor: 'yellow',\r\n                  strokeWeight: 1,\r\n                  fillOpacity: 0.5,\r\n                  scale: 4,\r\n                }}\r\n                position={{\r\n                  lat: sati[0],\r\n                  lng: sati[1],\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n\r\n        {ShipsID.map((shipid, index) => {\r\n          return (\r\n            <Marker\r\n              key={index}\r\n              onClick={() => {\r\n                history.push(`/shipdetails/${shipid}`);\r\n                window.location.reload(false);\r\n                // rerenderDashbaord();\r\n              }}\r\n              // onMouseover={onMouseHover}\r\n              icon={{\r\n                path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,\r\n                fillColor: markerColor[shipsData['Vessel Filter'][shipid]],\r\n                fillOpacity: 0.5,\r\n                strokeColor: markerColor[shipsData['Vessel Filter'][shipid]],\r\n                // scaledSize: new window.google.maps.Size(500, 500),\r\n                strokeWeight: 1,\r\n                scale: 4,\r\n                rotation: Number(\r\n                  shipsData['Course'][shipid].slice(\r\n                    0,\r\n                    shipsData['Course'][shipid].length - 1\r\n                  )\r\n                ),\r\n              }}\r\n              position={{\r\n                lat: shipsData['Latitude'][shipid],\r\n                lng: shipsData['Longitude'][shipid],\r\n              }}\r\n            >\r\n              <InfoWindow marker={activeMarker} visible={showingInfoWindow}>\r\n                <div>\r\n                  <h1>Hello</h1>\r\n                </div>\r\n              </InfoWindow>\r\n            </Marker>\r\n          );\r\n        })}\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyCvPv1nI4ihrAv3a7pAXjGZUCs_YRiIuOc',\r\n})(MapEmbedd);\r\n","E:\\PieChartTemp\\src\\components\\Dashboard\\piechart.js",["65"],"import React, { useState, useEffect } from 'react';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport './piechart.css';\r\nimport { ShipsID } from '../../extras/ShipsId';\r\nconst PieChartDisplay = () => {\r\n  let shipsData = require('../../JsonData/final_AIS_data.json');\r\n  const [chartData, setChartData] = useState({\r\n    data: [\r\n      { title: 'Unspecified Ships', value: 0, color: '#000000' },\r\n      { title: 'Fishing', value: 0, color: '#800080' },\r\n      { title: 'Tugs and Special Craft', value: 0, color: '#a52a2a' },\r\n      { title: 'High Speed Craft', value: 0, color: '#4b0082' },\r\n      { title: 'Passenger Vessels', value: 0, color: '#008080' },\r\n      { title: 'Pleasure Craft', value: 0, color: '#008000' },\r\n      { title: 'Tankers', value: 0, color: '#ffa500' },\r\n      { title: 'Cargo Vessel', value: 0, color: '#ff0000' },\r\n    ],\r\n    buttons: [1, 1, 1, 1, 1, 1, 1, 1],\r\n    datavalues: [10, 15, 20, 20, 30, 20, 20, 40],\r\n    datatext: [\r\n      'Unspecified Ships',\r\n      'Fishing',\r\n      'Tugs & Special Craft',\r\n      'High Speed Craft',\r\n      'Passenger Vessels',\r\n      'Pleasure Craft',\r\n      'Tankers',\r\n      'Cargo Vessel',\r\n    ],\r\n  });\r\n  useEffect(() => {\r\n    let getIndex = {\r\n      'Unspecified Ships': 0,\r\n      Fishing: 1,\r\n      'Tugs & Special Craft': 2,\r\n      'High Speed Craft': 3,\r\n      'Passenger Vessels': 4,\r\n      'Pleasure Craft': 5,\r\n      Tankers: 6,\r\n      'Cargo Vessel': 7,\r\n    };\r\n\r\n    let cnt = chartData.data;\r\n    ShipsID.forEach((ship) => {\r\n      let category = shipsData['Vessel Filter'][ship];\r\n      const categoryId = getIndex[category];\r\n      cnt[categoryId]['value'] = cnt[categoryId]['value'] + 1;\r\n    });\r\n    setChartData({\r\n      ...chartData,\r\n      data: cnt,\r\n    });\r\n  }, []);\r\n  const handleClick = (id) => {\r\n    let tempdata = chartData.data;\r\n    let tempbuttons = chartData.buttons;\r\n    let tempdatatext = chartData.datatext;\r\n\r\n    if (tempbuttons[id] === 1) {\r\n      tempbuttons[id] = 0;\r\n      tempdata[id]['value'] = 0;\r\n      tempdatatext[id] = <s> {tempdata[id]['title']} </s>;\r\n    } else {\r\n      tempbuttons[id] = 1;\r\n      tempdata[id]['value'] = chartData.datavalues[id];\r\n      tempdatatext[id] = tempdata[id]['title'];\r\n    }\r\n    setChartData({\r\n      ...chartData,\r\n      buttons: tempbuttons,\r\n      data: tempdata,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='card text-center mx-auto my-2 shadow-sm'\r\n      style={{ width: `90%` }}\r\n    >\r\n      <h5 className='card-header'>Curent Conditions</h5>\r\n      <h6 className='card-title mb-2 text-muted'>(156/156) vessels</h6>\r\n      <div className='card-body'>\r\n        <div className='piechartdiv card-img'>\r\n          <PieChart\r\n            data={chartData.data}\r\n            radius={PieChart.defaultProps.radius - 7}\r\n            paddingAngle={1}\r\n            segmentsShift={1}\r\n          />\r\n          ;\r\n        </div>\r\n        <div className='buttons card-text'>\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#000000' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(0)}>\r\n            {chartData.datatext[0]}\r\n          </button>\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#800080' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(1)}>\r\n            {chartData.datatext[1]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#a52a2a' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(2)}>\r\n            {chartData.datatext[2]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#4b0082' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(3)}>\r\n            {chartData.datatext[3]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#008080' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(4)}>\r\n            {chartData.datatext[4]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#008000' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(5)}>\r\n            {chartData.datatext[5]}\r\n          </button>\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#ffa500' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(6)}>\r\n            {chartData.datatext[6]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#ff0000' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(7)}>\r\n            {chartData.datatext[7]}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChartDisplay;\r\n","E:\\PieChartTemp\\src\\components\\Dashboard\\alerts.js",[],"E:\\PieChartTemp\\src\\components\\NavBar.js",[],"E:\\PieChartTemp\\src\\components\\Dashboard\\DashboardMain.js",["66"],"import React from 'react';\r\nimport Alerts from './alerts';\r\nimport PieChartDisplay from './piechart';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nconst DashboardMain = () => {\r\n  return (\r\n    <div>\r\n      <Navbar style={{ background: '#9fa8da' }} variant='dark' sticky='top'>\r\n        <Navbar.Brand\r\n          className='text-capitalize font-weight-bold'\r\n          style={{ textAlign: 'left', color: 'black' }}\r\n        >\r\n          <img\r\n            src='https://img.icons8.com/material/24/000000/dashboard-layout.png'\r\n            className='mr-3'\r\n          />{' '}\r\n          Dashboard\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n      <div className='my-4 px-3'>\r\n        <PieChartDisplay />\r\n        <br />\r\n        <Alerts />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardMain;\r\n","E:\\PieChartTemp\\src\\components\\Dashboard\\alertDetail.js",["67","68","69"],"import React, { useState, useEffect } from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AlertDetail = (props) => {\r\n  console.log(props);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    let alertsList = require('../../JsonData/alerts.json');\r\n    let filteredArray = alertsList.filter(function (itm) {\r\n      return itm.id == props.match.params.id;\r\n    });\r\n    console.log(filteredArray);\r\n    setData({\r\n      msg: filteredArray[0].msg,\r\n      xcor: filteredArray[0].lat,\r\n      ycor: filteredArray[0].lng,\r\n    });\r\n  }, []);\r\n  const [data, setData] = useState({\r\n    msg: 'loading',\r\n    xcor: 'loading',\r\n    ycor: 'loading',\r\n  });\r\n\r\n  let { msg, xcor, ycor } = data;\r\n\r\n  return (\r\n    <div>\r\n      <Navbar style={{ background: '#9fa8da' }} variant='dark'>\r\n        <Navbar.Brand\r\n          className='text-capitalize font-weight-bold'\r\n          style={{ textAlign: 'left', color: 'black' }}\r\n        >\r\n          <img\r\n            src='https://img.icons8.com/metro/26/000000/circled-left.png'\r\n            className='mr-3'\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => history.goBack()}\r\n          />{' '}\r\n          Alert Detail\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n      <div className='pt-5 px-3'>\r\n        <h3 className='font-weight-bold'>{msg}</h3>\r\n        <div className='mt-4'>\r\n          <span>\r\n            <span className='font-weight-bold'>Lat : </span> {xcor}\r\n          </span>\r\n          <br style={{ height: '25px' }} />\r\n          <span>\r\n            <span className='font-weight-bold'>Lng : </span> {ycor}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertDetail;\r\n","E:\\PieChartTemp\\src\\extras\\ShipsId.js",[],"E:\\PieChartTemp\\src\\components\\Dashboard\\displayShip.js",["70","71","72","73","74"],"E:\\PieChartTemp\\src\\components\\Dashboard\\DisplayUnknownShips.js",["75","76","77","78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":7,"column":10,"nodeType":"86","messageId":"87","endLine":7,"endColumn":20},{"ruleId":"84","severity":1,"message":"88","line":35,"column":10,"nodeType":"86","messageId":"87","endLine":35,"endColumn":24},{"ruleId":"84","severity":1,"message":"89","line":35,"column":26,"nodeType":"86","messageId":"87","endLine":35,"endColumn":43},{"ruleId":"84","severity":1,"message":"90","line":13,"column":20,"nodeType":"86","messageId":"87","endLine":13,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":53,"column":6,"nodeType":"93","endLine":53,"endColumn":8,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":14,"column":11,"nodeType":"97","endLine":17,"endColumn":13},{"ruleId":"98","severity":1,"message":"99","line":11,"column":21,"nodeType":"100","messageId":"101","endLine":11,"endColumn":23},{"ruleId":"91","severity":1,"message":"102","line":19,"column":6,"nodeType":"93","endLine":19,"endColumn":8,"suggestions":"103"},{"ruleId":"95","severity":1,"message":"96","line":35,"column":11,"nodeType":"97","endLine":40,"endColumn":13},{"ruleId":"84","severity":1,"message":"104","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":26},{"ruleId":"84","severity":1,"message":"105","line":31,"column":13,"nodeType":"86","messageId":"87","endLine":31,"endColumn":16},{"ruleId":"84","severity":1,"message":"105","line":60,"column":13,"nodeType":"86","messageId":"87","endLine":60,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":90,"column":11,"nodeType":"97","endLine":98,"endColumn":13},{"ruleId":"95","severity":1,"message":"96","line":130,"column":15,"nodeType":"97","endLine":134,"endColumn":17},{"ruleId":"84","severity":1,"message":"104","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":26},{"ruleId":"84","severity":1,"message":"105","line":33,"column":13,"nodeType":"86","messageId":"87","endLine":33,"endColumn":16},{"ruleId":"84","severity":1,"message":"105","line":62,"column":13,"nodeType":"86","messageId":"87","endLine":62,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":92,"column":11,"nodeType":"97","endLine":100,"endColumn":13},{"ruleId":"95","severity":1,"message":"96","line":130,"column":15,"nodeType":"97","endLine":134,"endColumn":17},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'categoryStates' is assigned a value but never used.","'setCategoryStates' is assigned a value but never used.","'setFormData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'chartData' and 'shipsData'. Either include them or remove the dependency array. You can also do a functional update 'setChartData(c => ...)' if you only need 'chartData' in the 'setChartData' call.","ArrayExpression",["108"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["109"],"'Component' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [chartData, shipsData]",{"range":"114","text":"115"},"Update the dependencies array to be: [props.match.params.id]",{"range":"116","text":"117"},[1765,1767],"[chartData, shipsData]",[600,602],"[props.match.params.id]"]