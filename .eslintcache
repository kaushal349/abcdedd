[{"E:\\PieChartTemp\\src\\index.js":"1","E:\\PieChartTemp\\src\\reportWebVitals.js":"2","E:\\PieChartTemp\\src\\App.js":"3","E:\\PieChartTemp\\src\\components\\Home\\MainPage.js":"4","E:\\PieChartTemp\\src\\components\\Home\\MapEmbedd.js":"5","E:\\PieChartTemp\\src\\components\\Dashboard\\piechart.js":"6","E:\\PieChartTemp\\src\\components\\Dashboard\\alerts.js":"7","E:\\PieChartTemp\\src\\components\\NavBar.js":"8","E:\\PieChartTemp\\src\\components\\Dashboard\\DashboardMain.js":"9","E:\\PieChartTemp\\src\\components\\Dashboard\\alertDetail.js":"10","E:\\PieChartTemp\\src\\extras\\ShipsId.js":"11","E:\\PieChartTemp\\src\\components\\Dashboard\\displayShip.js":"12","E:\\PieChartTemp\\src\\components\\Dashboard\\DisplayUnknownShips.js":"13","E:\\PieChartTemp\\src\\components\\ImageDetection\\ImageDetection.js":"14","E:\\PieChartTemp\\src\\components\\AddThreat\\AddThreat.js":"15","E:\\PieChartTemp\\src\\components\\ImageDetection\\FindShip.js":"16"},{"size":517,"mtime":1612325050539,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1612151317094,"results":"19","hashOfConfig":"18"},{"size":868,"mtime":1612345123953,"results":"20","hashOfConfig":"18"},{"size":5737,"mtime":1612348874785,"results":"21","hashOfConfig":"18"},{"size":5099,"mtime":1612348647987,"results":"22","hashOfConfig":"18"},{"size":5225,"mtime":1612190772215,"results":"23","hashOfConfig":"18"},{"size":1041,"mtime":1612157217107,"results":"24","hashOfConfig":"18"},{"size":868,"mtime":1612342067813,"results":"25","hashOfConfig":"18"},{"size":806,"mtime":1612190958233,"results":"26","hashOfConfig":"18"},{"size":1745,"mtime":1612169803826,"results":"27","hashOfConfig":"18"},{"size":2150,"mtime":1612175944418,"results":"28","hashOfConfig":"18"},{"size":5251,"mtime":1612348952493,"results":"29","hashOfConfig":"18"},{"size":4744,"mtime":1612347443410,"results":"30","hashOfConfig":"18"},{"size":2157,"mtime":1612343108230,"results":"31","hashOfConfig":"18"},{"size":12961,"mtime":1612343326418,"results":"32","hashOfConfig":"18"},{"size":3471,"mtime":1612341069000,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ptwx2s",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"E:\\PieChartTemp\\src\\index.js",[],["72","73"],"E:\\PieChartTemp\\src\\reportWebVitals.js",[],"E:\\PieChartTemp\\src\\App.js",[],"E:\\PieChartTemp\\src\\components\\Home\\MainPage.js",["74","75"],"E:\\PieChartTemp\\src\\components\\Home\\MapEmbedd.js",["76","77","78"],"E:\\PieChartTemp\\src\\components\\Dashboard\\piechart.js",["79"],"import React, { useState, useEffect } from 'react';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport './piechart.css';\r\nimport { ShipsID } from '../../extras/ShipsId';\r\nconst PieChartDisplay = () => {\r\n  let shipsData = require('../../JsonData/final_AIS_data.json');\r\n  const [chartData, setChartData] = useState({\r\n    data: [\r\n      { title: 'Unspecified Ships', value: 0, color: '#000000' },\r\n      { title: 'Fishing', value: 0, color: '#800080' },\r\n      { title: 'Tugs and Special Craft', value: 0, color: '#a52a2a' },\r\n      { title: 'High Speed Craft', value: 0, color: '#4b0082' },\r\n      { title: 'Passenger Vessels', value: 0, color: '#008080' },\r\n      { title: 'Pleasure Craft', value: 0, color: '#008000' },\r\n      { title: 'Tankers', value: 0, color: '#ffa500' },\r\n      { title: 'Cargo Vessel', value: 0, color: '#ff0000' },\r\n    ],\r\n    buttons: [1, 1, 1, 1, 1, 1, 1, 1],\r\n    datavalues: [10, 15, 20, 20, 30, 20, 20, 40],\r\n    datatext: [\r\n      'Unspecified Ships',\r\n      'Fishing',\r\n      'Tugs & Special Craft',\r\n      'High Speed Craft',\r\n      'Passenger Vessels',\r\n      'Pleasure Craft',\r\n      'Tankers',\r\n      'Cargo Vessel',\r\n    ],\r\n  });\r\n  useEffect(() => {\r\n    let getIndex = {\r\n      'Unspecified Ships': 0,\r\n      Fishing: 1,\r\n      'Tugs & Special Craft': 2,\r\n      'High Speed Craft': 3,\r\n      'Passenger Vessels': 4,\r\n      'Pleasure Craft': 5,\r\n      Tankers: 6,\r\n      'Cargo Vessel': 7,\r\n    };\r\n\r\n    let cnt = chartData.data;\r\n    ShipsID.forEach((ship) => {\r\n      let category = shipsData['Vessel Filter'][ship];\r\n      const categoryId = getIndex[category];\r\n      cnt[categoryId]['value'] = cnt[categoryId]['value'] + 1;\r\n    });\r\n    setChartData({\r\n      ...chartData,\r\n      data: cnt,\r\n    });\r\n  }, []);\r\n  const handleClick = (id) => {\r\n    let tempdata = chartData.data;\r\n    let tempbuttons = chartData.buttons;\r\n    let tempdatatext = chartData.datatext;\r\n\r\n    if (tempbuttons[id] === 1) {\r\n      tempbuttons[id] = 0;\r\n      tempdata[id]['value'] = 0;\r\n      tempdatatext[id] = <s> {tempdata[id]['title']} </s>;\r\n    } else {\r\n      tempbuttons[id] = 1;\r\n      tempdata[id]['value'] = chartData.datavalues[id];\r\n      tempdatatext[id] = tempdata[id]['title'];\r\n    }\r\n    setChartData({\r\n      ...chartData,\r\n      buttons: tempbuttons,\r\n      data: tempdata,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='card text-center mx-auto my-2 shadow-sm'\r\n      style={{ width: `90%` }}\r\n    >\r\n      <h5 className='card-header'>Curent Conditions</h5>\r\n      <h6 className='card-title mb-2 text-muted'>(156/156) vessels</h6>\r\n      <div className='card-body'>\r\n        <div className='piechartdiv card-img'>\r\n          <PieChart\r\n            data={chartData.data}\r\n            radius={PieChart.defaultProps.radius - 7}\r\n            paddingAngle={1}\r\n            segmentsShift={1}\r\n          />\r\n          ;\r\n        </div>\r\n        <div className='buttons card-text'>\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#000000' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(0)}>\r\n            {chartData.datatext[0]}\r\n          </button>\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#800080' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(1)}>\r\n            {chartData.datatext[1]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#a52a2a' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(2)}>\r\n            {chartData.datatext[2]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#4b0082' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(3)}>\r\n            {chartData.datatext[3]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#008080' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(4)}>\r\n            {chartData.datatext[4]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#008000' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(5)}>\r\n            {chartData.datatext[5]}\r\n          </button>\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#ffa500' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(6)}>\r\n            {chartData.datatext[6]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#ff0000' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(7)}>\r\n            {chartData.datatext[7]}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChartDisplay;\r\n","E:\\PieChartTemp\\src\\components\\Dashboard\\alerts.js",[],"E:\\PieChartTemp\\src\\components\\NavBar.js",[],"E:\\PieChartTemp\\src\\components\\Dashboard\\DashboardMain.js",["80"],"import React from 'react';\r\nimport Alerts from './alerts';\r\nimport PieChartDisplay from './piechart';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nconst DashboardMain = () => {\r\n  return (\r\n    <div>\r\n      <Navbar style={{ background: '#9fa8da' }} variant='dark' sticky='top'>\r\n        <Navbar.Brand\r\n          className='text-capitalize font-weight-bold'\r\n          style={{ textAlign: 'left', color: 'black' }}\r\n        >\r\n          <img\r\n            src='https://img.icons8.com/material/24/000000/dashboard-layout.png'\r\n            className='mr-3'\r\n          />{' '}\r\n          Dashboard\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n      <div className='my-4 px-3'>\r\n        <PieChartDisplay />\r\n        <br />\r\n        <Alerts />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardMain;\r\n","E:\\PieChartTemp\\src\\components\\Dashboard\\alertDetail.js",["81","82","83"],"import React, { useState, useEffect } from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AlertDetail = (props) => {\r\n  console.log(props);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    let alertsList = require('../../JsonData/alerts.json');\r\n    let filteredArray = alertsList.filter(function (itm) {\r\n      return itm.id == props.match.params.id;\r\n    });\r\n    console.log(filteredArray);\r\n    setData({\r\n      msg: filteredArray[0].msg,\r\n      xcor: filteredArray[0].lat,\r\n      ycor: filteredArray[0].lng,\r\n    });\r\n  }, []);\r\n  const [data, setData] = useState({\r\n    msg: 'loading',\r\n    xcor: 'loading',\r\n    ycor: 'loading',\r\n  });\r\n\r\n  let { msg, xcor, ycor } = data;\r\n\r\n  return (\r\n    <div>\r\n      <Navbar style={{ background: '#9fa8da' }} variant='dark'>\r\n        <Navbar.Brand\r\n          className='text-capitalize font-weight-bold'\r\n          style={{ textAlign: 'left', color: 'black' }}\r\n        >\r\n          <img\r\n            src='https://img.icons8.com/metro/26/000000/circled-left.png'\r\n            className='mr-3'\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => history.goBack()}\r\n          />{' '}\r\n          Alert Detail\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n      <div className='pt-5 px-3'>\r\n        <h3 className='font-weight-bold'>{msg}</h3>\r\n        <div className='mt-4'>\r\n          <span>\r\n            <span className='font-weight-bold'>Lat : </span> {xcor}\r\n          </span>\r\n          <br style={{ height: '25px' }} />\r\n          <span>\r\n            <span className='font-weight-bold'>Lng : </span> {ycor}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertDetail;\r\n","E:\\PieChartTemp\\src\\extras\\ShipsId.js",[],"E:\\PieChartTemp\\src\\components\\Dashboard\\displayShip.js",["84","85","86","87","88"],"E:\\PieChartTemp\\src\\components\\Dashboard\\DisplayUnknownShips.js",["89","90","91","92","93"],"E:\\PieChartTemp\\src\\components\\ImageDetection\\ImageDetection.js",[],"E:\\PieChartTemp\\src\\components\\AddThreat\\AddThreat.js",["94","95","96","97","98","99","100","101","102","103","104","105","106"],"import React, { useState } from 'react';\nimport { Form, Button, Dropdown, Col, Modal } from 'react-bootstrap';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport './AddThreat.css';\n\nconst AddThreat = () => {\n  const [value0, setValue] = useState(0);\n  const [value1, setValue1] = useState(0);\n  const [value2, setValue2] = useState(0);\n  const [value3, setValue3] = useState(0);\n  const [value4, setValue4] = useState(0);\n  const [value5, setValue5] = useState(0);\n  const [value6, setValue6] = useState(0);\n  const [value7, setValue7] = useState(0);\n  const [value8, setValue8] = useState(0);\n  const [value9, setValue9] = useState(0);\n  const [value10, setValue10] = useState(0);\n\n  const [showModal1, setModal1] = useState(false);\n  const [showModal2, setModal2] = useState(false);\n\n  return (\n    <div className='parentdiv'>\n      <div className='row'>\n        <div\n          className='threatform'\n          style={{\n            backgroundImage:\n              'url(https://i.pinimg.com/originals/e2/71/fd/e271fda72f1e158b5f0569cc72d36d7f.jpg)',\n          }}\n        >\n          <div style={{ textAlign: 'center', marginBottom: '5%' }}>\n            <h2>ADD DETAILS FOR THREAT</h2>\n          </div>\n          <Form>\n            <Form.Group style={{ marginBottom: '10%' }}>\n              <Form.Row>\n                <Col sm='2'>\n                  <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                    Flag of Ship:\n                  </Form.Label>\n                </Col>\n                <Col sm='3'>\n                  <Form.Control as='select' multiple>\n                    <option>China</option>\n                    <option>Pakistan</option>\n                    <option>USA</option>\n                    <option>Ireland</option>\n                    <option>Bangladesh</option>\n                  </Form.Control>\n                </Col>\n                <Col sm='1'></Col>\n                <Col sm='2'>\n                  <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                    Type of Ship\n                  </Form.Label>\n                </Col>\n                <Col sm='3'>\n                  <Form.Control as='select' multiple>\n                    <option>Fishing</option>\n                    <option>Tugs & Special Craft</option>\n                    <option>High speed Craft</option>\n                    <option>Passenger Vessel</option>\n                    <option>Tanker</option>\n                    <option>Cargo Vessel</option>\n                    <option>Pleasure Craft</option>\n                  </Form.Control>\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group style={{ marginBottom: '10%' }}>\n              <Form.Row>\n                <Col sm='2'>\n                  <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                    Latitude:\n                  </Form.Label>\n                </Col>\n                <Col sm='4'>\n                  <RangeSlider\n                    tooltip='on'\n                    min={0}\n                    max={100}\n                    value={value0}\n                    onChange={(changeEvent) =>\n                      setValue(changeEvent.target.value)\n                    }\n                    step={5}\n                    size='lg'\n                    variant='success'\n                    tooltip='auto'\n                  />\n                </Col>\n                <Col sm='2'>\n                  <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                    Longitude:\n                  </Form.Label>\n                </Col>\n                <Col sm='4'>\n                  <RangeSlider\n                    tooltip='on'\n                    min={0}\n                    max={100}\n                    value={value1}\n                    onChange={(changeEvent) =>\n                      setValue1(changeEvent.target.value)\n                    }\n                    step={5}\n                    size='lg'\n                    variant='success'\n                    tooltip='auto'\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group style={{ marginBottom: '10%' }}>\n              <Form.Row>\n                <Col sm='2'>\n                  <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                    Weight:\n                  </Form.Label>\n                </Col>\n                <Col sm='4'>\n                  <RangeSlider\n                    tooltip='on'\n                    min={0}\n                    max={100}\n                    value={value2}\n                    onChange={(changeEvent) =>\n                      setValue2(changeEvent.target.value)\n                    }\n                    step={5}\n                    size='lg'\n                    variant='success'\n                    tooltip='auto'\n                  />\n                </Col>\n                <Col sm='2'>\n                  <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                    Length:\n                  </Form.Label>\n                </Col>\n                <Col sm='4'>\n                  <RangeSlider\n                    tooltip='on'\n                    min={0}\n                    max={100}\n                    value={value3}\n                    onChange={(changeEvent) =>\n                      setValue3(changeEvent.target.value)\n                    }\n                    step={5}\n                    size='lg'\n                    variant='success'\n                    tooltip='auto'\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group style={{ marginBottom: '10%' }}>\n              <Form.Row>\n                <Col sm='2'>\n                  <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                    Distance from Coast:\n                  </Form.Label>\n                </Col>\n                <Col sm='4'>\n                  <RangeSlider\n                    tooltip='on'\n                    min={0}\n                    max={100}\n                    value={value4}\n                    onChange={(changeEvent) =>\n                      setValue4(changeEvent.target.value)\n                    }\n                    step={5}\n                    size='lg'\n                    variant='success'\n                    tooltip='auto'\n                  />\n                </Col>\n                <Col sm='2'>\n                  <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                    Number of ships nearby\n                  </Form.Label>\n                </Col>\n                <Col sm='4'>\n                  <RangeSlider\n                    tooltip='on'\n                    min={0}\n                    max={100}\n                    value={value5}\n                    onChange={(changeEvent) =>\n                      setValue5(changeEvent.target.value)\n                    }\n                    step={5}\n                    size='lg'\n                    variant='success'\n                    tooltip='auto'\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group\n              style={{ marginBottom: '10%' }}\n              controlId='exampleForm.ControlSelect2'\n            >\n              <Form.Row>\n                <Col sm='2'>\n                  <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                    Status of Ship\n                  </Form.Label>\n                </Col>\n                <Col sm='3'>\n                  <Dropdown>\n                    <Dropdown.Toggle variant='light' id='dropdown-basic'>\n                      Select Status\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='#/action-1'>Under Way</Dropdown.Item>\n                      <Dropdown.Item href='#/action-2'>At Anchor</Dropdown.Item>\n                      <Dropdown.Item href='#/action-3'>Sailing</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group style={{ marginBottom: '10%' }}>\n              <Form.Row>\n                <Col sm='2'>\n                  <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                    Speed:{' '}\n                  </Form.Label>\n                </Col>\n                <Col sm='4'>\n                  <RangeSlider\n                    tooltip='on'\n                    min={0}\n                    max={100}\n                    value={value8}\n                    onChange={(changeEvent) =>\n                      setValue8(changeEvent.target.value)\n                    }\n                    step={5}\n                    size='lg'\n                    variant='success'\n                    tooltip='auto'\n                  />\n                </Col>\n                <Col sm='2'>\n                  <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                    Draught:{' '}\n                  </Form.Label>\n                </Col>\n                <Col sm='4'>\n                  <RangeSlider\n                    tooltip='on'\n                    min={0}\n                    max={100}\n                    value={value9}\n                    onChange={(changeEvent) =>\n                      setValue9(changeEvent.target.value)\n                    }\n                    step={5}\n                    size='lg'\n                    variant='success'\n                    tooltip='auto'\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group style={{ marginBottom: '10%' }}>\n              <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                Anomalies in AIS:\n              </Form.Label>\n              <Form.Row>\n                <Col sm='2'>\n                  <Form.Check type={'checkbox'} label={'5'} />\n                </Col>\n                <Col sm='2'>\n                  <Form.Check type={'checkbox'} label={'10'} />\n                </Col>\n                <Col sm='2'>\n                  <Form.Check type={'checkbox'} label={'15'} />\n                </Col>\n                <Col sm='2'>\n                  <Form.Check type={'checkbox'} label={'20'} />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group style={{ marginBottom: '10%' }}>\n              <Form.Row>\n                <Col sm='2'>\n                  <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                    Time of Day:\n                  </Form.Label>\n                </Col>\n                <Col sm='4'>\n                  <RangeSlider\n                    tooltip='on'\n                    min={0}\n                    max={100}\n                    value={value10}\n                    onChange={(changeEvent) =>\n                      setValue10(changeEvent.target.value)\n                    }\n                    step={5}\n                    size='lg'\n                    variant='success'\n                    tooltip='auto'\n                  />\n                </Col>\n                <Col sm='2'>\n                  <Form.Label style={{ fontWeight: 'bold', fontSize: 'large' }}>\n                    Change in Location\n                  </Form.Label>\n                </Col>\n                <Col sm='4'>\n                  <Form.Control type='integer' />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n          </Form>\n\n          <div style={{ textAlign: 'center' }}>\n            <Button\n              variant='danger'\n              type='submit'\n              style={{ textAlign: 'center' }}\n              onClick={() => setModal1(true)}\n            >\n              Save Preference\n            </Button>\n            <br />\n            <br />\n            <Button\n              variant='danger'\n              type='submit'\n              style={{ textAlign: 'center' }}\n              onClick={() => setModal2(true)}\n            >\n              Train Model\n            </Button>\n\n            <Modal\n              show={showModal1}\n              style={{ textAlign: 'center', padding: '5%' }}\n            >\n              <h6>Your Preference has been saved</h6>\n              <div>\n                <Button variant='danger' onClick={() => setModal1(false)}>\n                  Close\n                </Button>\n              </div>\n            </Modal>\n\n            <Modal\n              show={showModal2}\n              style={{ textAlign: 'center', padding: '5%' }}\n            >\n              <h6>Data has been saved to train the model</h6>\n              <div>\n                <Button variant='danger' onClick={() => setModal2(false)}>\n                  Close\n                </Button>\n              </div>\n            </Modal>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddThreat;\n","E:\\PieChartTemp\\src\\components\\ImageDetection\\FindShip.js",["107","108","109"],"import React,{Component} from 'react' \nimport {Card} from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom';\n//import { ShipsID } from '../../extras/ShipsId';\n\nconst FindShip = (props) => {\n\n    let shipsData = require('../../JsonData/final_AIS_data.json');\n    let shipsImages = require('../../JsonData/mmsi_image')\n    let shipsIDs = require('../../extras/ShipsId')\n    const shipid =   shipsIDs['ShipsID'][Math.floor(Math.random() * 100) + 1]\n    const history = useHistory();\n\n    return(\n            <div className=\"container\">\n                <div className='row'>\n                    <Card border='danger' style={{ width: '45rem',marginLeft:'15%',marginTop:'5%',textAlign:'center'}}>\n                        <Card.Body>\n                            <Card.Title style={{textAlign:'center'}}><b>{shipsData['Vessel Name'][shipid]}</b></Card.Title>\n                            <Card.Text style={{fontWeight:'bold'}}>\n                                <div style={{height:'13em',textAlign:'center'}}>\n                                    <img\n                                    src={shipsImages['Image URL'][shipsData['MMSI'][shipid]]}\n                                    height='100%'\n                                    width='60%'\n                                    />\n                                </div>\n                                <br /> <br /> <br />\n                                <div className='row'>\n                                    <div className='col-md-6'>\n                                        Course: {shipsData['Course'][shipid]}\n                                    </div>\n                                    <div className='col-md-6'>\n                                    Speed: (Kn) {shipsData['Speed (Kn)'][shipid]}\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className='col-md-6'>\n                                    Length Overall: {shipsData['Length (m)'][shipid]}\n                                    </div>\n                                    <div className='col-md-6'>\n                                    Last Updated: {shipsData['Last Updated'][shipid]}\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className='col-md-6'>\n                                    Current Draught: {shipsData['Current Draught'][shipid]}\n                                    </div>\n                                    <div className='col-md-6'>\n                                    GT: {shipsData['Gross Tonnage'][shipid]}\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className='col-md-6'>\n                                    Built: {shipsData['Year of Built'][shipid]}\n                                    </div>\n                                    <div className='col-md-6'>\n                                    IMO number: {shipsData['IMO'][shipid]}\n                                    </div>\n                                </div>\n                               \n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n    )\n    \n}\n\nexport default FindShip",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":47,"column":10,"nodeType":"116","messageId":"117","endLine":47,"endColumn":24},{"ruleId":"114","severity":1,"message":"118","line":47,"column":26,"nodeType":"116","messageId":"117","endLine":47,"endColumn":43},{"ruleId":"114","severity":1,"message":"119","line":16,"column":20,"nodeType":"116","messageId":"117","endLine":16,"endColumn":31},{"ruleId":"120","severity":1,"message":"121","line":31,"column":13,"nodeType":"122","endLine":41,"endColumn":4},{"ruleId":"123","severity":1,"message":"124","line":66,"column":21,"nodeType":"125","messageId":"126","endLine":70,"endColumn":22},{"ruleId":"120","severity":1,"message":"127","line":53,"column":6,"nodeType":"128","endLine":53,"endColumn":8,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":14,"column":11,"nodeType":"132","endLine":17,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":11,"column":21,"nodeType":"135","messageId":"136","endLine":11,"endColumn":23},{"ruleId":"120","severity":1,"message":"137","line":19,"column":6,"nodeType":"128","endLine":19,"endColumn":8,"suggestions":"138"},{"ruleId":"130","severity":1,"message":"131","line":35,"column":11,"nodeType":"132","endLine":40,"endColumn":13},{"ruleId":"114","severity":1,"message":"139","line":2,"column":17,"nodeType":"116","messageId":"117","endLine":2,"endColumn":26},{"ruleId":"114","severity":1,"message":"140","line":31,"column":13,"nodeType":"116","messageId":"117","endLine":31,"endColumn":16},{"ruleId":"114","severity":1,"message":"140","line":63,"column":13,"nodeType":"116","messageId":"117","endLine":63,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":94,"column":11,"nodeType":"132","endLine":102,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":134,"column":15,"nodeType":"132","endLine":138,"endColumn":17},{"ruleId":"114","severity":1,"message":"139","line":2,"column":17,"nodeType":"116","messageId":"117","endLine":2,"endColumn":26},{"ruleId":"114","severity":1,"message":"140","line":33,"column":13,"nodeType":"116","messageId":"117","endLine":33,"endColumn":16},{"ruleId":"114","severity":1,"message":"140","line":64,"column":13,"nodeType":"116","messageId":"117","endLine":64,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":95,"column":11,"nodeType":"132","endLine":103,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":133,"column":15,"nodeType":"132","endLine":137,"endColumn":17},{"ruleId":"114","severity":1,"message":"141","line":13,"column":10,"nodeType":"116","messageId":"117","endLine":13,"endColumn":16},{"ruleId":"114","severity":1,"message":"142","line":13,"column":18,"nodeType":"116","messageId":"117","endLine":13,"endColumn":27},{"ruleId":"114","severity":1,"message":"143","line":14,"column":10,"nodeType":"116","messageId":"117","endLine":14,"endColumn":16},{"ruleId":"114","severity":1,"message":"144","line":14,"column":18,"nodeType":"116","messageId":"117","endLine":14,"endColumn":27},{"ruleId":"145","severity":1,"message":"146","line":91,"column":21,"nodeType":"147","endLine":91,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":111,"column":21,"nodeType":"147","endLine":111,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":136,"column":21,"nodeType":"147","endLine":136,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":156,"column":21,"nodeType":"147","endLine":156,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":181,"column":21,"nodeType":"147","endLine":181,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":201,"column":21,"nodeType":"147","endLine":201,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":251,"column":21,"nodeType":"147","endLine":251,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":271,"column":21,"nodeType":"147","endLine":271,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":316,"column":21,"nodeType":"147","endLine":316,"endColumn":35},{"ruleId":"114","severity":1,"message":"139","line":1,"column":15,"nodeType":"116","messageId":"117","endLine":1,"endColumn":24},{"ruleId":"114","severity":1,"message":"148","line":12,"column":11,"nodeType":"116","messageId":"117","endLine":12,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":22,"column":37,"nodeType":"132","endLine":26,"endColumn":39},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'categoryStates' is assigned a value but never used.","Identifier","unusedVar","'setCategoryStates' is assigned a value but never used.","'setFormData' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'chartData' and 'shipsData'. Either include them or remove the dependency array. You can also do a functional update 'setChartData(c => ...)' if you only need 'chartData' in the 'setChartData' call.","ArrayExpression",["151"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["152"],"'Component' is defined but never used.","'res' is assigned a value but never used.","'value6' is assigned a value but never used.","'setValue6' is assigned a value but never used.","'value7' is assigned a value but never used.","'setValue7' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [chartData, shipsData]",{"range":"157","text":"158"},"Update the dependencies array to be: [props.match.params.id]",{"range":"159","text":"160"},[1765,1767],"[chartData, shipsData]",[600,602],"[props.match.params.id]"]