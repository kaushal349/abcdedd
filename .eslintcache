[{"E:\\PieChartTemp\\src\\index.js":"1","E:\\PieChartTemp\\src\\reportWebVitals.js":"2","E:\\PieChartTemp\\src\\App.js":"3","E:\\PieChartTemp\\src\\components\\Home\\MainPage.js":"4","E:\\PieChartTemp\\src\\components\\Home\\MapEmbedd.js":"5","E:\\PieChartTemp\\src\\components\\Dashboard\\piechart.js":"6","E:\\PieChartTemp\\src\\components\\Dashboard\\alerts.js":"7","E:\\PieChartTemp\\src\\components\\NavBar.js":"8","E:\\PieChartTemp\\src\\components\\Dashboard\\DashboardMain.js":"9","E:\\PieChartTemp\\src\\components\\Dashboard\\alertDetail.js":"10","E:\\PieChartTemp\\src\\extras\\ShipsId.js":"11","E:\\PieChartTemp\\src\\components\\Dashboard\\displayShip.js":"12","E:\\PieChartTemp\\src\\components\\Dashboard\\DisplayUnknownShips.js":"13","E:\\PieChartTemp\\src\\components\\ImageDetection\\ImageDetection.js":"14","E:\\PieChartTemp\\src\\components\\AddThreat\\AddThreat.js":"15","E:\\PieChartTemp\\src\\components\\ImageDetection\\FindShip.js":"16"},{"size":517,"mtime":1612325050539,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1612151317094,"results":"19","hashOfConfig":"18"},{"size":816,"mtime":1612341929913,"results":"20","hashOfConfig":"18"},{"size":5318,"mtime":1612339957403,"results":"21","hashOfConfig":"18"},{"size":4958,"mtime":1612341107170,"results":"22","hashOfConfig":"18"},{"size":5225,"mtime":1612190772215,"results":"23","hashOfConfig":"18"},{"size":1041,"mtime":1612157217107,"results":"24","hashOfConfig":"18"},{"size":868,"mtime":1612342067813,"results":"25","hashOfConfig":"18"},{"size":806,"mtime":1612190958233,"results":"26","hashOfConfig":"18"},{"size":1745,"mtime":1612169803826,"results":"27","hashOfConfig":"18"},{"size":2150,"mtime":1612175944418,"results":"28","hashOfConfig":"18"},{"size":5175,"mtime":1612340414091,"results":"29","hashOfConfig":"18"},{"size":4668,"mtime":1612340363684,"results":"30","hashOfConfig":"18"},{"size":2316,"mtime":1612339358000,"results":"31","hashOfConfig":"18"},{"size":19292,"mtime":1612331572000,"results":"32","hashOfConfig":"18"},{"size":3471,"mtime":1612341069000,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ptwx2s",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},"E:\\PieChartTemp\\src\\index.js",[],["76","77"],"E:\\PieChartTemp\\src\\reportWebVitals.js",[],"E:\\PieChartTemp\\src\\App.js",[],"E:\\PieChartTemp\\src\\components\\Home\\MainPage.js",["78","79","80","81"],"import React, { useState } from 'react';\r\nimport MapEmbedd from './MapEmbedd';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport DashboardMain from '../Dashboard/DashboardMain';\r\nimport alertDetail from '../Dashboard/alertDetail';\r\nimport DisplayShip from '../Dashboard/displayShip';\r\nimport { Form, Col, InputGroup, FormControl } from 'react-bootstrap';\r\nimport DisplayUnknownShips from '../Dashboard/DisplayUnknownShips';\r\n\r\nconst MainPage = () => {\r\n  const [satelliteFeed, setSatelliteFeed] = useState(true);\r\n  const [threatFeed, setThreatFeed] = useState(true);\r\n  const [activeZoom, setActiveZoom] = useState(10);\r\n  const [initLat, setInitLat] = useState(1.30415);\r\n  const [intiLng, setInitLng] = useState(103.86066);\r\n  const [altState, setAltState] = useState(true);\r\n\r\n  const rerenderDashbaord = () => {\r\n    console.log('inside re redner');\r\n    setAltState(!altState);\r\n  };\r\n  const resetMap = () => {\r\n    setActiveZoom(10);\r\n    setInitLat(1.30415);\r\n    setInitLng(103.86066);\r\n  };\r\n  const setZoom = (val) => {\r\n    setActiveZoom(val);\r\n  };\r\n  const setLat = (val) => {\r\n    setInitLat(val);\r\n  };\r\n  const setLng = (val) => {\r\n    setInitLng(val);\r\n  };\r\n  const [categoryStates, setCategoryStates] = useState({\r\n    'Unspecified Ships': true,\r\n    Fishing: true,\r\n    'Tugs & Special Craft': true,\r\n    'High Speed Craft': true,\r\n    'Passenger Vessels': true,\r\n    'Pleasure Craft': true,\r\n    Tankers: true,\r\n    'Cargo Vessel': true,\r\n  });\r\n  return (\r\n    <div className='container-fluid m-0 p-0'>\r\n      <div className='row'>\r\n        <div className='col-lg-8 p-0'>\r\n          {/* <div className='pl-5 checkbox-lg bg-info d-flex align-items-center'> */}\r\n          {/* <div class='form-row pl-5 bg-info'>\r\n            <div class='form-group col-md-6 bg-danger mt-auto mb-auto'>\r\n              <input\r\n                className='form-check-input'\r\n                type='checkbox'\r\n                style={{\r\n                  height: '50px',\r\n                }}\r\n                checked={satelliteFeed}\r\n                onChange={() => {\r\n                  setSatelliteFeed(!satelliteFeed);\r\n                }}\r\n              />\r\n              <label className='form-check-label font-weight-bold text-white'>\r\n                satellite\r\n              </label>\r\n            </div> */}\r\n          {/* </div> */}\r\n          <Form>\r\n            <Form.Row className='align-items-center px-5 pt-2 bg-dark'>\r\n              <Col xs='auto'>\r\n                <Form.Check\r\n                  type='checkbox'\r\n                  id='autoSizingCheck'\r\n                  className='mb-2 font-weight-bold text-danger'\r\n                  label='Satellite feed'\r\n                  checked={satelliteFeed}\r\n                  onChange={() => {\r\n                    setSatelliteFeed(!satelliteFeed);\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col xs='auto' className='ml-4'>\r\n                <Form.Check\r\n                  type='checkbox'\r\n                  id='autoSizingCheck'\r\n                  className='mb-2 font-weight-bold text-danger'\r\n                  label='Threat feed'\r\n                  checked={threatFeed}\r\n                  onChange={() => {\r\n                    setThreatFeed(!threatFeed);\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col xs='auto' className='ml-4'>\r\n                <Form.Check\r\n                  type='checkbox'\r\n                  id='autoSizingCheck'\r\n                  className='mb-2 font-weight-bold text-danger'\r\n                  label='Show past track'\r\n                />\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n\r\n          <MapEmbedd\r\n            satelliteFeed={satelliteFeed}\r\n            threatFeed={threatFeed}\r\n            activeZoom={activeZoom}\r\n            intiLng={intiLng}\r\n            initLat={initLat}\r\n            rerenderDashbaord={rerenderDashbaord}\r\n          />\r\n        </div>\r\n        <div\r\n          className='col-lg-4 p-0'\r\n          style={{ height: '800px', overflowY: 'scroll' }}\r\n        >\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path='/' component={DashboardMain} />\r\n              <Route exact path='/alert-detail/:id' component={alertDetail} />\r\n              <Route\r\n                exact\r\n                path='/shipdetails/:shipid'\r\n                render={(props) => (\r\n                  <DisplayShip\r\n                    setLat={setLat}\r\n                    setLng={setLng}\r\n                    setZoom={setZoom}\r\n                    resetMap={resetMap}\r\n                    altState={altState}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path='/shipdetails/:lat/:lng'\r\n                render={(props) => (\r\n                  <DisplayUnknownShips\r\n                    setLat={setLat}\r\n                    setLng={setLng}\r\n                    setZoom={setZoom}\r\n                    resetMap={resetMap}\r\n                    altState={altState}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","E:\\PieChartTemp\\src\\components\\Home\\MapEmbedd.js",["82","83","84"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\r\nimport { ShipsID } from '../../extras/ShipsId';\r\n\r\nconst MapEmbedd = ({\r\n  satelliteFeed,\r\n  threatFeed,\r\n  activeZoom,\r\n  intiLng,\r\n  initLat,\r\n  rerenderDashbaord,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n  });\r\n\r\n  const { showingInfoWindow, activeMarker } = formData;\r\n  const [threatPoint, setThreatPoints] = useState([]);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const google = window.google;\r\n  let shipsData = require('../../JsonData/final_AIS_data.json');\r\n  let markerColor = require('../../JsonData/marker_color.json');\r\n  let satData = require('../../JsonData/satelite_feed.json');\r\n\r\n  useEffect(async () => {\r\n    const res = await axios.get(\r\n      `https://django-marine.herokuapp.com/location/`\r\n    );\r\n    let tempArr = [];\r\n    res.data.forEach((el) => {\r\n      tempArr.unshift([el['lat'], el['long'], el['satellite'], el['shipid']]);\r\n    });\r\n    setThreatPoints(tempArr);\r\n    setDataLoaded(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!dataLoaded && <p>Loading data</p>}\r\n      {dataLoaded && (\r\n        <Map\r\n          google={google}\r\n          mapType='satellite'\r\n          zoom={activeZoom}\r\n          initialCenter={{\r\n            lat: initLat,\r\n            lng: intiLng,\r\n          }}\r\n          style={{\r\n            height: '800px',\r\n          }}\r\n        >\r\n          {threatPoint &&\r\n            threatFeed &&\r\n            threatPoint.map((sati, index) => {\r\n              return (\r\n                <Marker\r\n                  key={index}\r\n                  onClick={() => {\r\n                    {\r\n                      sati[2] === true\r\n                        ? history.push(`/shipdetails/${sati[3]}`)\r\n                        : history.push(`/shipdetails/${sati[0]}/${sati[1]}`);\r\n                    }\r\n                    console.log(sati[3]);\r\n                    window.location.reload(false);\r\n                    // rerenderDashbaord();\r\n                  }}\r\n                  position={{\r\n                    lat: sati[0],\r\n                    lng: sati[1],\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          {satelliteFeed &&\r\n            satData.map((sati, index) => {\r\n              return (\r\n                <Marker\r\n                  key={index}\r\n                  onClick={() => {\r\n                    history.push(`/shipdetails/${sati[0]}/${sati[1]}`);\r\n                    window.location.reload(false);\r\n                    // rerenderDashbaord();\r\n                  }}\r\n                  icon={{\r\n                    path: google.maps.SymbolPath.CIRCLE,\r\n                    fillColor: 'yellow',\r\n                    strokeColor: 'yellow',\r\n                    strokeWeight: 1,\r\n                    fillOpacity: 0.5,\r\n                    scale: 4,\r\n                  }}\r\n                  position={{\r\n                    lat: sati[0],\r\n                    lng: sati[1],\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n\r\n          {ShipsID.map((shipid, index) => {\r\n            return (\r\n              <Marker\r\n                key={index}\r\n                onClick={() => {\r\n                  // console.log(shipid);\r\n                  history.push(`/shipdetails/${shipid}`);\r\n                  window.location.reload(false);\r\n                  // rerenderDashbaord();\r\n                }}\r\n                // onMouseover={onMouseHover}\r\n                icon={{\r\n                  path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,\r\n                  fillColor: markerColor[shipsData['Vessel Filter'][shipid]],\r\n                  fillOpacity: 0.5,\r\n                  strokeColor: markerColor[shipsData['Vessel Filter'][shipid]],\r\n                  // scaledSize: new window.google.maps.Size(500, 500),\r\n                  strokeWeight: 1,\r\n                  scale: 4,\r\n                  rotation: Number(\r\n                    shipsData['Course'][shipid].slice(\r\n                      0,\r\n                      shipsData['Course'][shipid].length - 1\r\n                    )\r\n                  ),\r\n                }}\r\n                position={{\r\n                  lat: shipsData['Latitude'][shipid],\r\n                  lng: shipsData['Longitude'][shipid],\r\n                }}\r\n              >\r\n                <InfoWindow marker={activeMarker} visible={showingInfoWindow}>\r\n                  <div>\r\n                    <h1>Hello</h1>\r\n                  </div>\r\n                </InfoWindow>\r\n              </Marker>\r\n            );\r\n          })}\r\n        </Map>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyCvPv1nI4ihrAv3a7pAXjGZUCs_YRiIuOc',\r\n})(MapEmbedd);\r\n","E:\\PieChartTemp\\src\\components\\Dashboard\\piechart.js",["85"],"import React, { useState, useEffect } from 'react';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport './piechart.css';\r\nimport { ShipsID } from '../../extras/ShipsId';\r\nconst PieChartDisplay = () => {\r\n  let shipsData = require('../../JsonData/final_AIS_data.json');\r\n  const [chartData, setChartData] = useState({\r\n    data: [\r\n      { title: 'Unspecified Ships', value: 0, color: '#000000' },\r\n      { title: 'Fishing', value: 0, color: '#800080' },\r\n      { title: 'Tugs and Special Craft', value: 0, color: '#a52a2a' },\r\n      { title: 'High Speed Craft', value: 0, color: '#4b0082' },\r\n      { title: 'Passenger Vessels', value: 0, color: '#008080' },\r\n      { title: 'Pleasure Craft', value: 0, color: '#008000' },\r\n      { title: 'Tankers', value: 0, color: '#ffa500' },\r\n      { title: 'Cargo Vessel', value: 0, color: '#ff0000' },\r\n    ],\r\n    buttons: [1, 1, 1, 1, 1, 1, 1, 1],\r\n    datavalues: [10, 15, 20, 20, 30, 20, 20, 40],\r\n    datatext: [\r\n      'Unspecified Ships',\r\n      'Fishing',\r\n      'Tugs & Special Craft',\r\n      'High Speed Craft',\r\n      'Passenger Vessels',\r\n      'Pleasure Craft',\r\n      'Tankers',\r\n      'Cargo Vessel',\r\n    ],\r\n  });\r\n  useEffect(() => {\r\n    let getIndex = {\r\n      'Unspecified Ships': 0,\r\n      Fishing: 1,\r\n      'Tugs & Special Craft': 2,\r\n      'High Speed Craft': 3,\r\n      'Passenger Vessels': 4,\r\n      'Pleasure Craft': 5,\r\n      Tankers: 6,\r\n      'Cargo Vessel': 7,\r\n    };\r\n\r\n    let cnt = chartData.data;\r\n    ShipsID.forEach((ship) => {\r\n      let category = shipsData['Vessel Filter'][ship];\r\n      const categoryId = getIndex[category];\r\n      cnt[categoryId]['value'] = cnt[categoryId]['value'] + 1;\r\n    });\r\n    setChartData({\r\n      ...chartData,\r\n      data: cnt,\r\n    });\r\n  }, []);\r\n  const handleClick = (id) => {\r\n    let tempdata = chartData.data;\r\n    let tempbuttons = chartData.buttons;\r\n    let tempdatatext = chartData.datatext;\r\n\r\n    if (tempbuttons[id] === 1) {\r\n      tempbuttons[id] = 0;\r\n      tempdata[id]['value'] = 0;\r\n      tempdatatext[id] = <s> {tempdata[id]['title']} </s>;\r\n    } else {\r\n      tempbuttons[id] = 1;\r\n      tempdata[id]['value'] = chartData.datavalues[id];\r\n      tempdatatext[id] = tempdata[id]['title'];\r\n    }\r\n    setChartData({\r\n      ...chartData,\r\n      buttons: tempbuttons,\r\n      data: tempdata,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='card text-center mx-auto my-2 shadow-sm'\r\n      style={{ width: `90%` }}\r\n    >\r\n      <h5 className='card-header'>Curent Conditions</h5>\r\n      <h6 className='card-title mb-2 text-muted'>(156/156) vessels</h6>\r\n      <div className='card-body'>\r\n        <div className='piechartdiv card-img'>\r\n          <PieChart\r\n            data={chartData.data}\r\n            radius={PieChart.defaultProps.radius - 7}\r\n            paddingAngle={1}\r\n            segmentsShift={1}\r\n          />\r\n          ;\r\n        </div>\r\n        <div className='buttons card-text'>\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#000000' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(0)}>\r\n            {chartData.datatext[0]}\r\n          </button>\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#800080' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(1)}>\r\n            {chartData.datatext[1]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#a52a2a' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(2)}>\r\n            {chartData.datatext[2]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#4b0082' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(3)}>\r\n            {chartData.datatext[3]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#008080' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(4)}>\r\n            {chartData.datatext[4]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#008000' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(5)}>\r\n            {chartData.datatext[5]}\r\n          </button>\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#ffa500' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(6)}>\r\n            {chartData.datatext[6]}\r\n          </button>{' '}\r\n          <br />\r\n          <button\r\n            className='colorbutton'\r\n            style={{ backgroundColor: '#ff0000' }}\r\n          ></button>\r\n          <button className='mybutton' onClick={() => handleClick(7)}>\r\n            {chartData.datatext[7]}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChartDisplay;\r\n","E:\\PieChartTemp\\src\\components\\Dashboard\\alerts.js",[],"E:\\PieChartTemp\\src\\components\\NavBar.js",[],"E:\\PieChartTemp\\src\\components\\Dashboard\\DashboardMain.js",["86"],"import React from 'react';\r\nimport Alerts from './alerts';\r\nimport PieChartDisplay from './piechart';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nconst DashboardMain = () => {\r\n  return (\r\n    <div>\r\n      <Navbar style={{ background: '#9fa8da' }} variant='dark' sticky='top'>\r\n        <Navbar.Brand\r\n          className='text-capitalize font-weight-bold'\r\n          style={{ textAlign: 'left', color: 'black' }}\r\n        >\r\n          <img\r\n            src='https://img.icons8.com/material/24/000000/dashboard-layout.png'\r\n            className='mr-3'\r\n          />{' '}\r\n          Dashboard\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n      <div className='my-4 px-3'>\r\n        <PieChartDisplay />\r\n        <br />\r\n        <Alerts />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardMain;\r\n","E:\\PieChartTemp\\src\\components\\Dashboard\\alertDetail.js",["87","88","89"],"import React, { useState, useEffect } from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AlertDetail = (props) => {\r\n  console.log(props);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    let alertsList = require('../../JsonData/alerts.json');\r\n    let filteredArray = alertsList.filter(function (itm) {\r\n      return itm.id == props.match.params.id;\r\n    });\r\n    console.log(filteredArray);\r\n    setData({\r\n      msg: filteredArray[0].msg,\r\n      xcor: filteredArray[0].lat,\r\n      ycor: filteredArray[0].lng,\r\n    });\r\n  }, []);\r\n  const [data, setData] = useState({\r\n    msg: 'loading',\r\n    xcor: 'loading',\r\n    ycor: 'loading',\r\n  });\r\n\r\n  let { msg, xcor, ycor } = data;\r\n\r\n  return (\r\n    <div>\r\n      <Navbar style={{ background: '#9fa8da' }} variant='dark'>\r\n        <Navbar.Brand\r\n          className='text-capitalize font-weight-bold'\r\n          style={{ textAlign: 'left', color: 'black' }}\r\n        >\r\n          <img\r\n            src='https://img.icons8.com/metro/26/000000/circled-left.png'\r\n            className='mr-3'\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => history.goBack()}\r\n          />{' '}\r\n          Alert Detail\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n      <div className='pt-5 px-3'>\r\n        <h3 className='font-weight-bold'>{msg}</h3>\r\n        <div className='mt-4'>\r\n          <span>\r\n            <span className='font-weight-bold'>Lat : </span> {xcor}\r\n          </span>\r\n          <br style={{ height: '25px' }} />\r\n          <span>\r\n            <span className='font-weight-bold'>Lng : </span> {ycor}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertDetail;\r\n","E:\\PieChartTemp\\src\\extras\\ShipsId.js",[],"E:\\PieChartTemp\\src\\components\\Dashboard\\displayShip.js",["90","91","92","93","94"],"import axios from 'axios';\r\nimport React, { Component, useState } from 'react';\r\nimport { Card, Navbar, Modal, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst DisplayShip = (props) => {\r\n  let shipsData = require('../../JsonData/final_AIS_data.json');\r\n  let shipsImages = require('../../JsonData/mmsi_image');\r\n  const shipid = props.match.params.shipid;\r\n  const history = useHistory();\r\n  const [status, setStatus] = useState(null);\r\n  const [markThreatStatus, setMarkThreatStatus] = useState(false);\r\n  const [removeThreatStatus, setRemoveThreatStatus] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const removeThreat = async () => {\r\n    const body = {\r\n      lat: shipsData['Latitude'][shipid],\r\n      long: shipsData['Longitude'][shipid],\r\n    };\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      setRemoveThreatStatus(true);\r\n      const res = await axios.post(\r\n        `https://django-marine.herokuapp.com/location/delete_custom/`,\r\n        body,\r\n        config\r\n      );\r\n      setStatus('Threat removed successfully');\r\n      setRemoveThreatStatus(false);\r\n    } catch (error) {\r\n      setStatus('Threat does not exists');\r\n      setRemoveThreatStatus(false);\r\n    }\r\n    handleShow();\r\n    setTimeout(function () {\r\n      handleClose();\r\n    }, 2000);\r\n  };\r\n\r\n  const markThreat = async () => {\r\n    const body = {\r\n      lat: shipsData['Latitude'][shipid],\r\n      long: shipsData['Longitude'][shipid],\r\n      satellite: true,\r\n      shipid: shipid,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      setMarkThreatStatus(true);\r\n      const res = await axios.post(\r\n        `https://django-marine.herokuapp.com/location/`,\r\n        body,\r\n        config\r\n      );\r\n      setStatus('Threat marked successfully');\r\n      setMarkThreatStatus(false);\r\n    } catch (error) {\r\n      setStatus('Threat already marked');\r\n      setMarkThreatStatus(false);\r\n    }\r\n    handleShow();\r\n    setTimeout(function () {\r\n      handleClose();\r\n    }, 2000);\r\n  };\r\n\r\n  const navigateMap = () => {\r\n    props.setZoom(16);\r\n    props.setLat(shipsData['Latitude'][shipid]);\r\n    props.setLng(shipsData['Longitude'][shipid]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar style={{ background: '#9fa8da' }} variant='dark' sticky='top'>\r\n        <Navbar.Brand\r\n          className='text-capitalize font-weight-bold'\r\n          style={{ textAlign: 'left', color: 'black' }}\r\n        >\r\n          <img\r\n            src='https://img.icons8.com/metro/26/000000/circled-left.png'\r\n            className='mr-3'\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => {\r\n              props.resetMap();\r\n              history.push('/');\r\n            }}\r\n          />{' '}\r\n          Vessel Details\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Status</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{status}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Card\r\n        style={{\r\n          width: '22em',\r\n          marginLeft: 'auto',\r\n          marginRight: 'auto',\r\n          marginTop: '5%',\r\n        }}\r\n      >\r\n        <Card.Body>\r\n          {/* {console.log(shipsData['Vessel Name'])} */}\r\n          <Card.Title className='font-weight-bold'>\r\n            {shipsData['Vessel Name'][shipid]}\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <div style={{ height: '20em' }}>\r\n              <img\r\n                src={shipsImages['Image URL'][shipsData['MMSI'][shipid]]}\r\n                height='100%'\r\n                width='100%'\r\n              />\r\n            </div>\r\n            <br />\r\n            <h6>Course: {shipsData['Course'][shipid]}</h6>\r\n            <h6>Speed: (Kn) {shipsData['Speed (Kn)'][shipid]}</h6>\r\n            <h6>Current Draught: {shipsData['Current Draught'][shipid]}</h6>\r\n            <h6>GT: {shipsData['Gross Tonnage'][shipid]}</h6>\r\n            <h6>Built: {shipsData['Year of Built'][shipid]}</h6>\r\n            <h6>IMO number: {shipsData['IMO'][shipid]}</h6>\r\n            <h6>Length Overall: {shipsData['Length (m)'][shipid]}</h6>\r\n            <h6>Last Updated: {shipsData['Last Updated'][shipid]}</h6>\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <button className='btn btn-danger mx-4 mb-2' onClick={markThreat}>\r\n          {markThreatStatus ? `Working....` : 'Mark as threat'}\r\n        </button>\r\n        <button className='btn btn-success mx-4 mb-2' onClick={removeThreat}>\r\n          {removeThreatStatus ? 'Working...' : 'Remove as threat'}\r\n        </button>\r\n        <button className='btn btn-info mx-4 mb-2' onClick={navigateMap}>\r\n          Show satellite feed\r\n        </button>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayShip;\r\n","E:\\PieChartTemp\\src\\components\\Dashboard\\DisplayUnknownShips.js",["95","96","97","98","99"],"import axios from 'axios';\r\nimport React, { Component, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Navbar, Modal, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst DisplayUnknownShips = (props) => {\r\n  let shipsData = require('../../JsonData/final_AIS_data.json');\r\n  let shipsImages = require('../../JsonData/mmsi_image');\r\n  console.log(props.match.params);\r\n  const latProp = props.match.params['lat'];\r\n  const lngProp = props.match.params['lng'];\r\n  const history = useHistory();\r\n  const [status, setStatus] = useState(null);\r\n  const [markThreatStatus, setMarkThreatStatus] = useState(false);\r\n  const [removeThreatStatus, setRemoveThreatStatus] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const removeThreat = async () => {\r\n    const body = {\r\n      lat: latProp,\r\n      long: lngProp,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      setRemoveThreatStatus(true);\r\n      const res = await axios.post(\r\n        `https://django-marine.herokuapp.com/location/delete_custom/`,\r\n        body,\r\n        config\r\n      );\r\n      setStatus('Threat removed successfully');\r\n      setRemoveThreatStatus(false);\r\n    } catch (error) {\r\n      setStatus('Threat does not exists');\r\n      setRemoveThreatStatus(false);\r\n    }\r\n    handleShow();\r\n    setTimeout(function () {\r\n      handleClose();\r\n    }, 2000);\r\n  };\r\n\r\n  const markThreat = async () => {\r\n    const body = {\r\n      lat: latProp,\r\n      long: lngProp,\r\n      satellite: false,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      setMarkThreatStatus(true);\r\n      const res = await axios.post(\r\n        `https://django-marine.herokuapp.com/location/`,\r\n        body,\r\n        config\r\n      );\r\n      setStatus('Threat marked successfully');\r\n      setMarkThreatStatus(false);\r\n    } catch (error) {\r\n      setStatus('Threat already marked');\r\n      setMarkThreatStatus(false);\r\n    }\r\n    handleShow();\r\n    setTimeout(function () {\r\n      handleClose();\r\n    }, 2000);\r\n  };\r\n\r\n  const navigateMap = () => {\r\n    props.setZoom(16);\r\n    props.setLat(latProp);\r\n    props.setLng(lngProp);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar style={{ background: '#9fa8da' }} variant='dark' sticky='top'>\r\n        <Navbar.Brand\r\n          className='text-capitalize font-weight-bold'\r\n          style={{ textAlign: 'left', color: 'black' }}\r\n        >\r\n          <img\r\n            src='https://img.icons8.com/metro/26/000000/circled-left.png'\r\n            className='mr-3'\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => {\r\n              props.resetMap();\r\n              history.push('/');\r\n            }}\r\n          />{' '}\r\n          Vessel Details\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Status</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{status}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Card\r\n        style={{\r\n          width: '22em',\r\n          marginLeft: 'auto',\r\n          marginRight: 'auto',\r\n          marginTop: '5%',\r\n        }}\r\n      >\r\n        <Card.Body>\r\n          {/* {console.log(shipsData['Vessel Name'])} */}\r\n          <Card.Title className='font-weight-bold'>Unknown Ship</Card.Title>\r\n          <Card.Text>\r\n            <div style={{ height: '20em' }}>\r\n              <img\r\n                src={shipsImages['Image URL'][shipsData['MMSI']['2111929']]}\r\n                height='100%'\r\n                width='100%'\r\n              />\r\n            </div>\r\n            <br />\r\n            <h6>Latitude: {latProp}</h6>\r\n            <h6>Longitude: {lngProp}</h6>\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <button className='btn btn-danger mx-4 mb-2' onClick={markThreat}>\r\n          {markThreatStatus ? `Working....` : 'Mark as threat'}\r\n        </button>\r\n        <button className='btn btn-success mx-4 mb-2' onClick={removeThreat}>\r\n          {removeThreatStatus ? 'Working...' : 'Remove as threat'}\r\n        </button>\r\n        <button className='btn btn-info mx-4 mb-2' onClick={navigateMap}>\r\n          Show satellite feed\r\n        </button>\r\n        {status}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayUnknownShips;\r\n","E:\\PieChartTemp\\src\\components\\ImageDetection\\ImageDetection.js",[],"E:\\PieChartTemp\\src\\components\\AddThreat\\AddThreat.js",["100","101","102","103","104","105","106","107","108","109","110"],"import React,{useState} from 'react' \nimport { Form,Button,Dropdown,Col,Modal } from 'react-bootstrap' \nimport RangeSlider from 'react-bootstrap-range-slider';\nimport './AddThreat.css'\n\nconst AddThreat = () => {\n \n    const [ value0, setValue ] = useState(0);\n    const [ value1, setValue1 ] = useState(0);\n    const [ value2, setValue2 ] = useState(0);\n    const [ value3, setValue3 ] = useState(0);\n    const [ value4, setValue4 ] = useState(0);\n    const [ value5, setValue5 ] = useState(0);\n    const [ value6, setValue6 ] = useState(0);\n    const [ value7, setValue7 ] = useState(0);\n    const [ value8, setValue8 ] = useState(0);\n    const [ value9, setValue9 ] = useState(0);\n    const [ value10, setValue10 ] = useState(0);\n\n    const [showModal1, setModal1] = useState(false)\n    const [showModal2, setModal2] = useState(false)\n\n        return(\n            <div className='parentdiv'>\n                <div className='row'>\n                    <div className='threatform' style={{backgroundImage: \"url(https://i.pinimg.com/originals/e2/71/fd/e271fda72f1e158b5f0569cc72d36d7f.jpg)\"}}>\n                <Form >\n\n                    <Form.Group style={{marginBottom:'10%'}}>\n                        <Form.Row>\n                            <Col sm='2'>\n                                <Form.Label style={{fontWeight: 'bold', fontSize:'large'}} >Flag of Ship:</Form.Label>\n                            </Col>\n                            <Col sm='3'>\n                            <Form.Control as=\"select\" multiple>\n                                <option>China</option>\n                                <option>Pakistan</option>\n                                <option>USA</option>\n                                <option>Ireland</option>\n                                <option>Bangladesh</option>\n                                </Form.Control>\n                            </Col>\n                            <Col sm='1'></Col>\n                            <Col sm='2'>\n                                <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Type of Ship</Form.Label>\n                            </Col>\n                            <Col sm='3'>\n                                <Form.Control as=\"select\" multiple>\n                                    <option>Fishing</option>\n                                    <option>Tugs & Special Craft</option>\n                                    <option>High speed Craft</option>\n                                    <option>Passenger Vessel</option>\n                                    <option>Tanker</option>\n                                    <option>Cargo Vessel</option>\n                                    <option>Pleasure Craft</option>\n                                </Form.Control>\n                            </Col>\n                        </Form.Row>\n                    </Form.Group>\n\n            \n                    <Form.Group style={{marginBottom:'10%'}}>\n                        <Form.Row>\n                                <Col sm='2'>\n                                    <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Latitude:</Form.Label>\n                                </Col>\n                                <Col sm='4'>\n                                    <RangeSlider\n                                        tooltip='on'\n                                        min={0}\n                                        max={100}\n                                        value={value0}\n                                        onChange={changeEvent => setValue(changeEvent.target.value)}\n                                        step = {5}\n                                        size = 'lg' \n                                        variant = 'success'\n                                        tooltip = 'auto' \n                                        />\n                                </Col>\n                                <Col sm='2'>\n                                    <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Longitude:</Form.Label>\n                                </Col>\n                                <Col sm='4'>\n                                    <RangeSlider\n                                            tooltip='on'\n                                            min={0}\n                                            max={100}\n                                            value={value1}\n                                            onChange={changeEvent => setValue1(changeEvent.target.value)}\n                                            step = {5}\n                                            size = 'lg' \n                                            variant = 'success'\n                                            tooltip = 'auto' \n                                            />\n                                </Col>\n                            </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group style={{marginBottom:'10%'}}>\n                        <Form.Row>\n                                <Col sm='2'>\n                                    <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Weight:</Form.Label>\n                                </Col>\n                                <Col sm='4'>\n                                    <RangeSlider\n                                        tooltip='on'\n                                        min={0}\n                                        max={100}\n                                        value={value2}\n                                        onChange={changeEvent => setValue2(changeEvent.target.value)}\n                                        step = {5}\n                                        size = 'lg' \n                                        variant = 'success'\n                                        tooltip = 'auto' \n                                        />\n                                </Col>\n                                <Col sm='2'>\n                                    <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Length:</Form.Label>\n                                </Col>\n                                <Col sm='4'>\n                                    <RangeSlider\n                                            tooltip='on'\n                                            min={0}\n                                            max={100}\n                                            value={value3}\n                                            onChange={changeEvent => setValue3(changeEvent.target.value)}\n                                            step = {5}\n                                            size = 'lg' \n                                            variant = 'success'\n                                            tooltip = 'auto' \n                                            />\n                                </Col>\n                            </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group style={{marginBottom:'10%'}}>\n                        <Form.Row>\n                                <Col sm='2'>\n                                    <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Distance from Coast:</Form.Label>\n                                </Col>\n                                <Col sm='4'>\n                                    <RangeSlider\n                                        tooltip='on'\n                                        min={0}\n                                        max={100}\n                                        value={value4}\n                                        onChange={changeEvent => setValue4(changeEvent.target.value)}\n                                        step = {5}\n                                        size = 'lg' \n                                        variant = 'success'\n                                        tooltip = 'auto' \n                                        />\n                                </Col>\n                                <Col sm='2'>\n                                    <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Number of ships nearby</Form.Label>\n                                </Col>\n                                <Col sm='4'>\n                                    <RangeSlider\n                                            tooltip='on'\n                                            min={0}\n                                            max={100}\n                                            value={value5}\n                                            onChange={changeEvent => setValue5(changeEvent.target.value)}\n                                            step = {5}\n                                            size = 'lg' \n                                            variant = 'success'\n                                            tooltip = 'auto' \n                                            />\n                                </Col>\n                            </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group style={{marginBottom:'10%'}} controlId= 'exampleForm.ControlSelect2'>\n                        <Form.Row>\n                            <Col sm='2'>\n                                <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Type of ships nearby:</Form.Label>\n                            </Col>\n                            <Col sm='3'>\n                                <Form.Control as=\"select\" multiple>\n                                        <option>Fishing</option>\n                                        <option>Tugs & Special Craft</option>\n                                        <option>High speed Craft</option>\n                                        <option>Passenger Vessel</option>\n                                        <option>Tanker</option>\n                                        <option>Cargo Vessel</option>\n                                        <option>Pleasure Craft</option>\n                                    </Form.Control>\n                            </Col>\n                            <Col sm='1'></Col>\n                            <Col sm='2'>\n                                <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Status of Ship</Form.Label>\n                            </Col>\n                            <Col sm='3'>\n                                <Dropdown>\n                                    <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\n                                        Select Status\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu>\n                                        <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                                        <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n                                        <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n                                    </Dropdown.Menu>\n                                </Dropdown>\n                            </Col>\n                        </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group style={{marginBottom:'10%'}}>\n                        <Form.Row>\n                                <Col sm='2'>\n                                    <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Speed: </Form.Label>\n                                </Col>\n                                <Col sm='4'>\n                                    <RangeSlider\n                                        tooltip='on'\n                                        min={0}\n                                        max={100}\n                                        value={value6}\n                                        onChange={changeEvent => setValue6(changeEvent.target.value)}\n                                        step = {5}\n                                        size = 'lg' \n                                        variant = 'success'\n                                        tooltip = 'auto' \n                                        />\n                                </Col>\n                                <Col sm='2'>\n                                    <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Draught: </Form.Label>\n                                </Col>\n                                <Col sm='4'>\n                                    <RangeSlider\n                                            tooltip='on'\n                                            min={0}\n                                            max={100}\n                                            value={value7}\n                                            onChange={changeEvent => setValue7(changeEvent.target.value)}\n                                            step = {5}\n                                            size = 'lg' \n                                            variant = 'success'\n                                            tooltip = 'auto' \n                                            />\n                                </Col>\n                            </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group style={{marginBottom:'10%'}}>\n                        <Form.Row>\n                                <Col sm='2'>\n                                    <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Speed: </Form.Label>\n                                </Col>\n                                <Col sm='4'>\n                                    <RangeSlider\n                                        tooltip='on'\n                                        min={0}\n                                        max={100}\n                                        value={value8}\n                                        onChange={changeEvent => setValue8(changeEvent.target.value)}\n                                        step = {5}\n                                        size = 'lg' \n                                        variant = 'success'\n                                        tooltip = 'auto' \n                                        />\n                                </Col>\n                                <Col sm='2'>\n                                    <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Draught: </Form.Label>\n                                </Col>\n                                <Col sm='4'>\n                                    <RangeSlider\n                                            tooltip='on'\n                                            min={0}\n                                            max={100}\n                                            value={value9}\n                                            onChange={changeEvent => setValue9(changeEvent.target.value)}\n                                            step = {5}\n                                            size = 'lg' \n                                            variant = 'success'\n                                            tooltip = 'auto' \n                                            />\n                                </Col>\n                            </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group style={{marginBottom:'10%'}}>\n                        <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Anomalies in AIS:</Form.Label>\n                        <Form.Row>\n                                <Col sm='2'>\n                                    <Form.Check \n                                    type={'checkbox'}\n                                    label={'Hoo'}\n                                />\n                                </Col>\n                                <Col sm='2'>\n                                    <Form.Check \n                                    type={'checkbox'}\n                                    label={'Hoo'}\n                                />\n                                </Col>\n                                <Col sm='2'>\n                                    <Form.Check \n                                    type={'checkbox'}\n                                    label={'Hoo'}\n                                />\n                                </Col>\n                                <Col sm='2'>\n                                    <Form.Check \n                                    type={'checkbox'}\n                                    label={'Hoo'}\n                                />\n                                </Col>\n                            </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group style={{marginBottom:'10%'}}>\n                        <Form.Row>\n                                <Col sm='2'>\n                                    <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Time of Day:</Form.Label>\n                                </Col>\n                                <Col sm='4'>\n                                    <RangeSlider\n                                        tooltip='on'\n                                        min={0}\n                                        max={100}\n                                        value={value10}\n                                        onChange={changeEvent => setValue10(changeEvent.target.value)}\n                                        step = {5}\n                                        size = 'lg' \n                                        variant = 'success'\n                                        tooltip = 'auto' \n                                        />\n                                </Col>\n                                <Col sm='2'>\n                                    <Form.Label style={{fontWeight: 'bold', fontSize:'large'}}>Change in Location</Form.Label>\n                                </Col>\n                                <Col sm='4'>\n                                <   Form.Control type=\"integer\" />\n                                </Col>\n                            </Form.Row>\n                    </Form.Group>\n\n                </Form>\n\n                <div style={{textAlign:'center'}}>\n                    <Button variant=\"danger\" type=\"submit\" style={{textAlign:'center'}} onClick={() => setModal1(true)}>\n                            Save Preference\n                    </Button>\n                    <br /><br />\n                    <Button variant=\"danger\" type=\"submit\" style={{textAlign:'center'}} onClick={() => setModal2(true)}>\n                            Train Model\n                    </Button>\n\n                    <Modal show={showModal1} style={{textAlign:'center',padding:'5%'}}>\n                        <h6>Your Preference has been saved</h6>\n                        <div>\n                            <Button variant='danger' onClick={()=> setModal1(false)}>Close</Button>\n                        </div>\n                    </Modal>\n\n                    <Modal show={showModal2} style={{textAlign:'center',padding:'5%'}}>\n                        <h6>Data has been saved to train the model</h6>\n                        <div>\n                            <Button variant='danger' onClick={()=> setModal2(false)}>Close</Button>\n                        </div>\n                    </Modal>\n                </div>\n                \n                </div>\n                </div>\n            </div>\n        )\n}\n\nexport default AddThreat","E:\\PieChartTemp\\src\\components\\ImageDetection\\FindShip.js",["111","112","113"],"import React,{Component} from 'react' \nimport {Card} from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom';\n//import { ShipsID } from '../../extras/ShipsId';\n\nconst FindShip = (props) => {\n\n    let shipsData = require('../../JsonData/final_AIS_data.json');\n    let shipsImages = require('../../JsonData/mmsi_image')\n    let shipsIDs = require('../../extras/ShipsId')\n    const shipid =   shipsIDs['ShipsID'][Math.floor(Math.random() * 100) + 1]\n    const history = useHistory();\n\n    return(\n            <div className=\"container\">\n                <div className='row'>\n                    <Card border='danger' style={{ width: '45rem',marginLeft:'15%',marginTop:'5%',textAlign:'center'}}>\n                        <Card.Body>\n                            <Card.Title style={{textAlign:'center'}}><b>{shipsData['Vessel Name'][shipid]}</b></Card.Title>\n                            <Card.Text style={{fontWeight:'bold'}}>\n                                <div style={{height:'13em',textAlign:'center'}}>\n                                    <img\n                                    src={shipsImages['Image URL'][shipsData['MMSI'][shipid]]}\n                                    height='100%'\n                                    width='60%'\n                                    />\n                                </div>\n                                <br /> <br /> <br />\n                                <div className='row'>\n                                    <div className='col-md-6'>\n                                        Course: {shipsData['Course'][shipid]}\n                                    </div>\n                                    <div className='col-md-6'>\n                                    Speed: (Kn) {shipsData['Speed (Kn)'][shipid]}\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className='col-md-6'>\n                                    Length Overall: {shipsData['Length (m)'][shipid]}\n                                    </div>\n                                    <div className='col-md-6'>\n                                    Last Updated: {shipsData['Last Updated'][shipid]}\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className='col-md-6'>\n                                    Current Draught: {shipsData['Current Draught'][shipid]}\n                                    </div>\n                                    <div className='col-md-6'>\n                                    GT: {shipsData['Gross Tonnage'][shipid]}\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className='col-md-6'>\n                                    Built: {shipsData['Year of Built'][shipid]}\n                                    </div>\n                                    <div className='col-md-6'>\n                                    IMO number: {shipsData['IMO'][shipid]}\n                                    </div>\n                                </div>\n                               \n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n    )\n    \n}\n\nexport default FindShip",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":7,"column":21,"nodeType":"120","messageId":"121","endLine":7,"endColumn":31},{"ruleId":"118","severity":1,"message":"122","line":7,"column":33,"nodeType":"120","messageId":"121","endLine":7,"endColumn":44},{"ruleId":"118","severity":1,"message":"123","line":36,"column":10,"nodeType":"120","messageId":"121","endLine":36,"endColumn":24},{"ruleId":"118","severity":1,"message":"124","line":36,"column":26,"nodeType":"120","messageId":"121","endLine":36,"endColumn":43},{"ruleId":"118","severity":1,"message":"125","line":15,"column":20,"nodeType":"120","messageId":"121","endLine":15,"endColumn":31},{"ruleId":"126","severity":1,"message":"127","line":30,"column":13,"nodeType":"128","endLine":40,"endColumn":4},{"ruleId":"129","severity":1,"message":"130","line":65,"column":21,"nodeType":"131","messageId":"132","endLine":69,"endColumn":22},{"ruleId":"126","severity":1,"message":"133","line":53,"column":6,"nodeType":"134","endLine":53,"endColumn":8,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":14,"column":11,"nodeType":"138","endLine":17,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":11,"column":21,"nodeType":"141","messageId":"142","endLine":11,"endColumn":23},{"ruleId":"126","severity":1,"message":"143","line":19,"column":6,"nodeType":"134","endLine":19,"endColumn":8,"suggestions":"144"},{"ruleId":"136","severity":1,"message":"137","line":35,"column":11,"nodeType":"138","endLine":40,"endColumn":13},{"ruleId":"118","severity":1,"message":"145","line":2,"column":17,"nodeType":"120","messageId":"121","endLine":2,"endColumn":26},{"ruleId":"118","severity":1,"message":"146","line":31,"column":13,"nodeType":"120","messageId":"121","endLine":31,"endColumn":16},{"ruleId":"118","severity":1,"message":"146","line":62,"column":13,"nodeType":"120","messageId":"121","endLine":62,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":92,"column":11,"nodeType":"138","endLine":100,"endColumn":13},{"ruleId":"136","severity":1,"message":"137","line":132,"column":15,"nodeType":"138","endLine":136,"endColumn":17},{"ruleId":"118","severity":1,"message":"145","line":2,"column":17,"nodeType":"120","messageId":"121","endLine":2,"endColumn":26},{"ruleId":"118","severity":1,"message":"146","line":33,"column":13,"nodeType":"120","messageId":"121","endLine":33,"endColumn":16},{"ruleId":"118","severity":1,"message":"146","line":63,"column":13,"nodeType":"120","messageId":"121","endLine":63,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":93,"column":11,"nodeType":"138","endLine":101,"endColumn":13},{"ruleId":"136","severity":1,"message":"137","line":131,"column":15,"nodeType":"138","endLine":135,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":77,"column":41,"nodeType":"149","endLine":77,"endColumn":57},{"ruleId":"147","severity":1,"message":"148","line":93,"column":45,"nodeType":"149","endLine":93,"endColumn":61},{"ruleId":"147","severity":1,"message":"148","line":115,"column":41,"nodeType":"149","endLine":115,"endColumn":57},{"ruleId":"147","severity":1,"message":"148","line":131,"column":45,"nodeType":"149","endLine":131,"endColumn":61},{"ruleId":"147","severity":1,"message":"148","line":153,"column":41,"nodeType":"149","endLine":153,"endColumn":57},{"ruleId":"147","severity":1,"message":"148","line":169,"column":45,"nodeType":"149","endLine":169,"endColumn":61},{"ruleId":"147","severity":1,"message":"148","line":226,"column":41,"nodeType":"149","endLine":226,"endColumn":57},{"ruleId":"147","severity":1,"message":"148","line":242,"column":45,"nodeType":"149","endLine":242,"endColumn":61},{"ruleId":"147","severity":1,"message":"148","line":263,"column":41,"nodeType":"149","endLine":263,"endColumn":57},{"ruleId":"147","severity":1,"message":"148","line":279,"column":45,"nodeType":"149","endLine":279,"endColumn":61},{"ruleId":"147","severity":1,"message":"148","line":330,"column":41,"nodeType":"149","endLine":330,"endColumn":57},{"ruleId":"118","severity":1,"message":"145","line":1,"column":15,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"150","line":12,"column":11,"nodeType":"120","messageId":"121","endLine":12,"endColumn":18},{"ruleId":"136","severity":1,"message":"137","line":22,"column":37,"nodeType":"138","endLine":26,"endColumn":39},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'InputGroup' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'categoryStates' is assigned a value but never used.","'setCategoryStates' is assigned a value but never used.","'setFormData' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'chartData' and 'shipsData'. Either include them or remove the dependency array. You can also do a functional update 'setChartData(c => ...)' if you only need 'chartData' in the 'setChartData' call.","ArrayExpression",["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["154"],"'Component' is defined but never used.","'res' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [chartData, shipsData]",{"range":"159","text":"160"},"Update the dependencies array to be: [props.match.params.id]",{"range":"161","text":"162"},[1765,1767],"[chartData, shipsData]",[600,602],"[props.match.params.id]"]